Notes on feature and command lines of docker

- (benefits) microservices are better than monolithic; it doesn't attach to only one stack; (horizontal scaling) microservices are better at adding more instances
- (difficulties) additional complexity like associated overhead; harder deployment; hard to define
 - a usualy strategy is to start from the traditional way and gradually migrate to microservices
 - there should be one API gateway that sits in front of all microservices
 
 - dockerization: craete an image and container for the app
	- envir variable configuration
	- properly capturing the logging of your application; saving logs on dockerization
	- it's recommended to start with resources on the Hub as a start


docker images
docker search something
docker ps # check what images are running; add -a to show all
docker run -d docker/welcome-to-docker # run an image
docker stop something #something is either the image path or id
docker run it c1f619b6477e /bin/bash #run within the image
docker run -P -d something # run with an automatic portal; use localhost:NUMBER to run locally
docker run -d p 80:80 something #define the portal 8080
wget http://localhost:80 #verify the local host
docker stop $(docker ps -a -q) # stop all containers
docker rm something # delete an image
docker pull something # pull from dockerhub
docker build -t something . 
docker pull 
docker tag container_name user_name/folder_name:latest #push step1
docker push ser_name/folder_name:latest #push step2

# orchestration: docker machine, docker compose, docker swarm, kubernetics